<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

<!-- (1)byType을 사용하지 않은경우 반드시 <property>태그를 사용해야한다.
<bean name="systemMoniter" class="spring10.SystemMoniter">
       <property name="call">
           <ref bean="PhoneCall" />
       </property>
</bean>
 -->
<!--  
<bean name="systemMoniter" class="spring10.SystemMoniter"
 			autowire="byType">
 </bean> 
 -->
 
 <bean name="systemMoniter" class="spring10.SystemMoniter" autowire="byName">
 </bean>
 <!-- byName에서는 PhoneCall객체를 얻어오기 위해서 멤버변수명과 name 이름이 같아야 한다. -->
<bean name="phonecall" class="spring10.PhoneCall" />

<!--
	3) 자바에서 객체를 생성X (추상클래스)
		 스프링컨테이너->해당 자기자신의 빈객체를 생성하지 마라 옵션
	                          abstract=true(추상클래스가 된다.)
	     추상클래스를 상속받는 자식클래스를 이용->6.parent="부모빈즈의 id부여" ->상속을 이용(오버라이딩)을 사용
	     													class 자식클래스명 extends 부모클래스명
	     <bean>태그를 써서 클래스를 등록 1. 객체를 미리 생성할 목적
	     										  2. 상속을 이용하기 위해서(자식클래스의 객체를 생성하기위해서) 	    
  -->
<bean id="commonMoniter"  class="spring11.SystemMoniter"
          abstract="true">
     <property name="periodTime" value="10" />
     <property name="sender" ref="smsSender" />
</bean>

<!--1.부모의 멤버변수를 그대로 사용 (부모의 100% 그대로 사용하겠다.) -->
<bean id="doorMoniter" parent="commonMoniter" />

<!--2.periodTime=30 (내용을 변경)(오버라이딩을 사용) -->
<bean id="lobbyMoniter" parent="commonMoniter">
    <property name="periodTime" value="30" />
</bean>

<!--3.periodTime=40  -->
<bean id="roomMoniter" parent="commonMoniter">
    <property name="periodTime" value="40" />
</bean>

<bean id="smsSender"  class="spring11.SmsSender" />

</beans>
